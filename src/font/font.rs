/* automatically generated by rust-bindgen */

use
super::*;

pub const LV_FONT_MONTSERRAT_12: u32 = 0;
pub const LV_FONT_MONTSERRAT_14: u32 = 0;
pub const LV_FONT_MONTSERRAT_16: u32 = 0;
pub const LV_FONT_MONTSERRAT_18: u32 = 0;
pub const LV_FONT_MONTSERRAT_20: u32 = 0;
pub const LV_FONT_MONTSERRAT_22: u32 = 0;
pub const LV_FONT_MONTSERRAT_24: u32 = 1;
pub const LV_FONT_MONTSERRAT_26: u32 = 0;
pub const LV_FONT_MONTSERRAT_28: u32 = 0;
pub const LV_FONT_MONTSERRAT_30: u32 = 0;
pub const LV_FONT_MONTSERRAT_32: u32 = 1;
pub const LV_FONT_MONTSERRAT_34: u32 = 0;
pub const LV_FONT_MONTSERRAT_36: u32 = 0;
pub const LV_FONT_MONTSERRAT_38: u32 = 0;
pub const LV_FONT_MONTSERRAT_40: u32 = 0;
pub const LV_FONT_MONTSERRAT_42: u32 = 0;
pub const LV_FONT_MONTSERRAT_44: u32 = 0;
pub const LV_FONT_MONTSERRAT_46: u32 = 0;
pub const LV_FONT_MONTSERRAT_48: u32 = 0;
pub const LV_FONT_MONTSERRAT_12_SUBPX: u32 = 0;
pub const LV_FONT_MONTSERRAT_28_COMPRESSED: u32 = 0;
pub const LV_FONT_DEJAVU_16_PERSIAN_HEBREW: u32 = 0;
pub const LV_FONT_SIMSUN_16_CJK: u32 = 0;
pub const LV_FONT_UNSCII_8: u32 = 0;
pub const LV_FONT_FMT_TXT_LARGE: u32 = 0;
pub const LV_FONT_SUBPX_BGR: u32 = 0;
pub const LV_FONT_MONTSERRAT_8: u32 = 0;
pub const LV_FONT_MONTSERRAT_10: u32 = 0;
pub const LV_FONT_WIDTH_FRACT_DIGIT: u32 = 4;
pub const LV_FONT_KERN_POSITIVE: u32 = 0;
pub const LV_FONT_KERN_NEGATIVE: u32 = 1;
pub type lv_coord_t = i16;
pub type lv_font_user_data_t = *mut ::cty::c_void;
pub const LV_FONT_SUBPX_NONE: _bindgen_ty_4 = 0;
pub const LV_FONT_SUBPX_HOR: _bindgen_ty_4 = 1;
pub const LV_FONT_SUBPX_VER: _bindgen_ty_4 = 2;
pub const LV_FONT_SUBPX_BOTH: _bindgen_ty_4 = 3;
#[doc = " The bitmaps might be upscaled by 3 to achieve subpixel rendering."]
pub type _bindgen_ty_4 = u32;
pub type lv_font_subpx_t = u8;
pub type lv_font_t = _lv_font_struct;
#[lvgl_macros::safe_wrap(attr)] extern "C" {
    #[doc = " Return with the bitmap of a font."]
    #[doc = " - __`font_p`__: pointer to a font"]
    #[doc = " - __`letter`__: an UNICODE character code"]
    #[doc = " Return:  pointer to the bitmap of the letter"]
    pub fn lv_font_get_glyph_bitmap(font_p: *const lv_font_t, letter: u32) -> *const u8;
}
#[lvgl_macros::safe_wrap(attr)] extern "C" {
    #[doc = " Get the descriptor of a glyph"]
    #[doc = " - __`font_p`__: pointer to font"]
    #[doc = " - __`dsc_out`__: store the result descriptor here"]
    #[doc = " - __`letter`__: an UNICODE letter code"]
    #[doc = " Return: true: descriptor is successfully loaded into `dsc_out`."]
    #[doc = "         false: the letter was not found, no data is loaded to `dsc_out`"]
    pub fn lv_font_get_glyph_dsc(
        font_p: *const lv_font_t,
        dsc_out: *mut lv_font_glyph_dsc_t,
        letter: u32,
        letter_next: u32,
    ) -> bool;
}
#[lvgl_macros::safe_wrap(attr)] extern "C" {
    #[doc = " Get the width of a glyph with kerning"]
    #[doc = " - __`font`__: pointer to a font"]
    #[doc = " - __`letter`__: an UNICODE letter"]
    #[doc = " - __`letter_next`__: the next letter after `letter`. Used for kerning"]
    #[doc = " Return: the width of the glyph"]
    pub fn lv_font_get_glyph_width(font: *const lv_font_t, letter: u32, letter_next: u32) -> u16;
}
#[lvgl_macros::safe_wrap(attr)] extern "C" {
    #[doc = " Get the line height of a font. All characters fit into this height"]
    #[doc = " - __`font_p`__: pointer to a font"]
    #[doc = " Return: the height of a font"]
    pub fn lv_font_get_line_height(font_p: *const lv_font_t) -> lv_coord_t;
}
#[lvgl_macros::safe_wrap(attr)] extern "C" {
    pub static mut lv_font_montserrat_24: lv_font_t;
}
#[lvgl_macros::safe_wrap(attr)] extern "C" {
    pub static mut lv_font_montserrat_32: lv_font_t;
}
